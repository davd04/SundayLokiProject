package BootCamp_2022;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Map;
import java.util.Set;

import com.upskill.java_1.MethodTypes;

public class test2 extends MethodTypes{
	
	private String name = "yes";

	public static void main(String[] args) {
		
		test2 obj = new test2();
		
		if(obj.palindrome("racecar") == true){
			System.out.println("palindrome");
		} else {
			System.out.println("not palindrome");
		}
		
		reverse("roast");
		
		int[] arr = {5,6,59,65,32,5,66};
		System.out.println(slargest(arr));
		
		obj.factorial(7);
		
		if(duplicate(arr) == true){
			System.out.println("duplicate");
		} else {
			System.out.println("not duplciate");
		}
		
		Map<Character, Integer> mapobj = new HashMap<>();
		
		mapobj.put('a', 5);
		mapobj.put('b', 8);
		
		System.out.println(mapobj.get('a'));
		
		Set<String> mapset = new HashSet<>();
		
		mapset.add("apple");
		mapset.add("mango");
		System.out.println(mapset);
		
		int[] allage = new int[]{4,15,36,22};
		
		int[][] age2 = {{5,23,62,4},
						{45,98,2,3}};
		
		System.out.println(allage[2]);
		System.out.println(age2[1][1]);
		
		Hashtable<Integer, String> maptable = new Hashtable<>();
		
		maptable.put(5, "candy");
		maptable.put(6, "fruits");
		
		System.out.println(maptable.get(6));
		
		fizzbuzz(22);

	}
	
	public boolean palindrome(String word){
		int a=0;
		int b=word.length()-1;
		
		while(a<b){
			if(word.charAt(a) == word.charAt(b)){
				return true;
			}
			++a;
			--b;
		}
		return false;
	}
	
	public static void reverse(String word){
		byte[] str = word.getBytes();
		byte[] result = new byte [str.length];
		
		for(int i=0; i<word.length();i++){
			result[i] += str[str.length - i -1];
		}
		
		System.out.println(new String(result));
	}
	
	public static Integer slargest(int[] arr){
		
		int max=Integer.MIN_VALUE;
		int smax=Integer.MIN_VALUE;
		
		for(int i=0; i<arr.length; i++){
			if(max<arr[i]){
				max=arr[i];
				smax=max;
			}
			if(max>arr[i] && smax<arr[i]){
				smax=arr[i];
			}
		}
		return smax;
	}
	
	public void factorial(int a){
		
		int factorial=a;
		for(int i=a-1; i>0; i--){
			factorial = factorial * i;
		}
		System.out.println("factorial: " + factorial);
	}
	
	public static boolean duplicate(int[] arr){
		for(int i=0; i<arr.length; i++){
			for(int j=i+1; j<arr.length;j++){
				if(arr[i] == arr[j]){
					return true;
				}
			}
			System.out.print("duplicate: " + arr[i]);
		}
		return false;
	}
	
	public static void fizzbuzz(int a){
		
		for(int i=0; i>=a; i++){
			if(i%5 == 0 && i%3 == 0){
				System.out.println("FizzBuzz");
			} else if(i%5 == 0){
				System.out.println("Fizz");
			} else if(i%3 == 0){
				System.out.println("Buzz");
			} else {
				System.out.println(i);
			}
		}
	}
}
